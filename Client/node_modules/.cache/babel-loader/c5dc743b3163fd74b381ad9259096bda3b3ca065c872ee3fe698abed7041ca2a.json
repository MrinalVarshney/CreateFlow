{"ast":null,"code":"var _jsxFileName = \"D:\\\\CreateFlow\\\\client\\\\src\\\\ToolBar\\\\ColorPalette.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Paper, Grid } from \"@mui/material\";\nimport { useDrawingTools } from \"../Context/DrawingToolsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#E57373\", \"#81C784\", \"#64B5F6\", \"#FFD54F\", \"#F06292\", \"#4DB6AC\", \"#9575CD\", \"#FF8A65\"];\nfunction ColorPalette() {\n  _s();\n  const {\n    color,\n    setColor\n  } = useDrawingTools();\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"absolute\",\n      top: \"3px\",\n      left: \"50px\"\n    },\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: colors.map(color => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            backgroundColor: color,\n            width: \"30px\",\n            height: \"30px\",\n            cursor: \"pointer\",\n            border: selectedColor === color ? \"2px solid #000\" : \"none\"\n          },\n          onClick: () => handleColorClick(color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorPalette, \"G0E6KoFKK6vVcbDUW0xlSTyg3jc=\", false, function () {\n  return [useDrawingTools];\n});\n_c = ColorPalette;\nexport default ColorPalette;\nvar _c;\n$RefreshReg$(_c, \"ColorPalette\");","map":{"version":3,"names":["React","useState","Box","Paper","Grid","useDrawingTools","jsxDEV","_jsxDEV","colors","ColorPalette","_s","color","setColor","handleColorClick","sx","position","top","left","p","children","container","spacing","map","item","elevation","style","backgroundColor","width","height","cursor","border","selectedColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CreateFlow/client/src/ToolBar/ColorPalette.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Paper, Grid } from \"@mui/material\";\r\nimport { useDrawingTools } from \"../Context/DrawingToolsContext\";\r\n\r\nconst colors = [\r\n  \"#E57373\",\r\n  \"#81C784\",\r\n  \"#64B5F6\",\r\n  \"#FFD54F\",\r\n  \"#F06292\",\r\n  \"#4DB6AC\",\r\n  \"#9575CD\",\r\n  \"#FF8A65\",\r\n];\r\n\r\nfunction ColorPalette() {\r\n  const { color, setColor } = useDrawingTools();\r\n\r\n  const handleColorClick = (color) => {\r\n    setColor(color);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"absolute\",\r\n        top: \"3px\",\r\n        left: \"50px\",\r\n      }}\r\n      p={2}\r\n    >\r\n      <Grid container spacing={1}>\r\n        {colors.map((color) => (\r\n          <Grid item key={color}>\r\n            <Paper\r\n              elevation={3}\r\n              style={{\r\n                backgroundColor: color,\r\n                width: \"30px\",\r\n                height: \"30px\",\r\n                cursor: \"pointer\",\r\n                border: selectedColor === color ? \"2px solid #000\" : \"none\",\r\n              }}\r\n              onClick={() => handleColorClick(color)}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ColorPalette;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAChD,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;AAED,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,eAAe,CAAC,CAAC;EAE7C,MAAMQ,gBAAgB,GAAIF,KAAK,IAAK;IAClCC,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA,CAACL,GAAG;IACFY,EAAE,EAAE;MACFC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE;IACR,CAAE;IACFC,CAAC,EAAE,CAAE;IAAAC,QAAA,eAELZ,OAAA,CAACH,IAAI;MAACgB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,EACxBX,MAAM,CAACc,GAAG,CAAEX,KAAK,iBAChBJ,OAAA,CAACH,IAAI;QAACmB,IAAI;QAAAJ,QAAA,eACRZ,OAAA,CAACJ,KAAK;UACJqB,SAAS,EAAE,CAAE;UACbC,KAAK,EAAE;YACLC,eAAe,EAAEf,KAAK;YACtBgB,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,MAAM,EAAE,SAAS;YACjBC,MAAM,EAAEC,aAAa,KAAKpB,KAAK,GAAG,gBAAgB,GAAG;UACvD,CAAE;UACFqB,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACF,KAAK;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GAXYzB,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CAnCQD,YAAY;EAAA,QACSJ,eAAe;AAAA;AAAAgC,EAAA,GADpC5B,YAAY;AAqCrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}