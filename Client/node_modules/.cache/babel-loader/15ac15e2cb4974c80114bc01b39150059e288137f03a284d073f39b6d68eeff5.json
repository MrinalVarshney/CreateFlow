{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivansh Mishra\\\\OneDrive\\\\Desktop\\\\CreateFlow\\\\Client\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\nimport { useHistory } from \"./Context/History\";\nimport \"./Cursors.css\";\nimport ColorPalette from \"./ToolBar/ColorPalette\";\nimport Tools from \"./ToolBar/Tools\";\nimport UndoRedo from \"./utils/UndoRedo\";\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\nimport { Box } from \"@mui/system\";\nimport FloodFill from \"q-floodfill\";\nimport { makeStyles } from \"@mui/styles\";\n// import { useStyles } from \"./Assets/CursorStyles\";\nimport eraserImage from \"./Assets/eraser.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    selectedTool,\n    selectedColor,\n    lineWidth,\n    eraserWidth\n  } = useDrawingTools();\n  const {\n    addToHistory\n  } = useHistory();\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  useEffect(() => {\n    saveCanvasState();\n  }, []);\n  useEffect(() => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\" || selectedTool === \"PaintBucket\") {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      // canvas.classList.add(CursorStyles.selectedTool);\n      if (selectedTool === \"Eraser\") {\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = eraserWidth;\n      } else {\n        ctx.strokeStyle = selectedColor;\n        ctx.lineWidth = lineWidth;\n      }\n      setContext(ctx);\n    }\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\n  const handleMouseDown = e => {\n    console.log(selectedTool);\n    if (selectedTool === \"PaintBucket\") {\n      const imgData = context.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const floodFill = new FloodFill(imgData);\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\n      context.putImageData(floodFill.imageData, 0, 0);\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(true);\n      context.beginPath();\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    } else {\n      setDrawing(true);\n      setStartX(e.nativeEvent.offsetX);\n      setStartY(e.nativeEvent.offsetY);\n    }\n  };\n  const handleMouseMove = e => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      if (!drawing) return;\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      context.stroke();\n    } else {\n      if (!drawing) return;\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n    }\n  };\n  const handleMouseUp = e => {\n    if (selectedTool === \"PaintBucket\") {\n      saveCanvasState();\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(false);\n      context.closePath();\n      saveCanvasState();\n    } else {\n      setDrawing(false);\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n      saveCanvasState();\n    }\n  };\n  const saveCanvasState = () => {\n    const canvas = canvasRef.current;\n    const snapShot = canvas.toDataURL();\n    console.log(\"State saved\");\n    addToHistory(snapShot);\n  };\n  const redrawCanvas = imageData => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageData;\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n  };\n  // const useStyles = makeStyles({\n  //   root: {\n  //     cursor: `url(./Assets/cursor/${selectedTool}.png), auto`,\n  //   },\n  // });\n  // const CursorStyles = useStyles();\n\n  console.log(`CursorStyles.${selectedTool}`);\n  return (\n    /*#__PURE__*/\n    // <div className={CursorStyles.root}>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tools, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ShapesMenu, {\n          canvasRef: canvasRef,\n          saveCanvasState: saveCanvasState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UndoRedo, {\n        redrawCanvas: redrawCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: eraserImage,\n        alt: \"eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(DrawingCanvas, \"E9eqV2zoN7IbR9gZvkfyUfmbh7E=\", false, function () {\n  return [useDrawingTools, useHistory];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDrawingTools","useHistory","ColorPalette","Tools","UndoRedo","ShapesMenu","Box","FloodFill","makeStyles","eraserImage","jsxDEV","_jsxDEV","DrawingCanvas","_s","canvasRef","selectedTool","selectedColor","lineWidth","eraserWidth","addToHistory","drawing","setDrawing","context","setContext","startX","setStartX","startY","setStartY","saveCanvasState","canvas","current","ctx","getContext","strokeStyle","handleMouseDown","e","console","log","imgData","getImageData","width","height","floodFill","fill","clientX","clientY","putImageData","imageData","beginPath","moveTo","nativeEvent","offsetX","offsetY","handleMouseMove","lineTo","stroke","endX","endY","fillRect","handleMouseUp","closePath","snapShot","toDataURL","redrawCanvas","img","Image","src","onload","clearRect","drawImage","children","sx","position","display","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","window","innerWidth","innerHeight","alt","_c","$RefreshReg$"],"sources":["C:/Users/Shivansh Mishra/OneDrive/Desktop/CreateFlow/Client/src/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\r\nimport { useHistory } from \"./Context/History\";\r\nimport \"./Cursors.css\";\r\nimport ColorPalette from \"./ToolBar/ColorPalette\";\r\nimport Tools from \"./ToolBar/Tools\";\r\nimport UndoRedo from \"./utils/UndoRedo\";\r\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\r\nimport { Box } from \"@mui/system\";\r\nimport FloodFill from \"q-floodfill\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n// import { useStyles } from \"./Assets/CursorStyles\";\r\nimport eraserImage from \"./Assets/eraser.jpg\";\r\n\r\nfunction DrawingCanvas() {\r\n  const canvasRef = useRef(null);\r\n  const { selectedTool, selectedColor, lineWidth, eraserWidth } =\r\n    useDrawingTools();\r\n  const { addToHistory } = useHistory();\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [startX, setStartX] = useState(0);\r\n  const [startY, setStartY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    saveCanvasState();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\" ||\r\n      selectedTool === \"PaintBucket\"\r\n    ) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      // canvas.classList.add(CursorStyles.selectedTool);\r\n      if (selectedTool === \"Eraser\") {\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.lineWidth = eraserWidth;\r\n      } else {\r\n        ctx.strokeStyle = selectedColor;\r\n        ctx.lineWidth = lineWidth;\r\n      }\r\n      setContext(ctx);\r\n    }\r\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(selectedTool);\r\n    if (selectedTool === \"PaintBucket\") {\r\n      const imgData = context.getImageData(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n      const floodFill = new FloodFill(imgData);\r\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\r\n      context.putImageData(floodFill.imageData, 0, 0);\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(true);\r\n      context.beginPath();\r\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    } else {\r\n      setDrawing(true);\r\n      setStartX(e.nativeEvent.offsetX);\r\n      setStartY(e.nativeEvent.offsetY);\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      if (!drawing) return;\r\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n      context.stroke();\r\n    } else {\r\n      if (!drawing) return;\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    if (selectedTool === \"PaintBucket\") {\r\n      saveCanvasState();\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(false);\r\n      context.closePath();\r\n      saveCanvasState();\r\n    } else {\r\n      setDrawing(false);\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n      saveCanvasState();\r\n    }\r\n  };\r\n\r\n  const saveCanvasState = () => {\r\n    const canvas = canvasRef.current;\r\n    const snapShot = canvas.toDataURL();\r\n    console.log(\"State saved\");\r\n    addToHistory(snapShot);\r\n  };\r\n\r\n  const redrawCanvas = (imageData) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    img.src = imageData;\r\n    img.onload = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n  };\r\n  // const useStyles = makeStyles({\r\n  //   root: {\r\n  //     cursor: `url(./Assets/cursor/${selectedTool}.png), auto`,\r\n  //   },\r\n  // });\r\n  // const CursorStyles = useStyles();\r\n\r\n  console.log(`CursorStyles.${selectedTool}`);\r\n  return (\r\n    // <div className={CursorStyles.root}>\r\n    <div>\r\n      <Box sx={{ position: \"absolute\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Tools />\r\n        <ShapesMenu canvasRef={canvasRef} saveCanvasState={saveCanvasState} />\r\n        <ColorPalette />\r\n      </Box>\r\n      <UndoRedo redrawCanvas={redrawCanvas} />\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n      />\r\n      <img src={eraserImage} alt=\"eraser\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAO,eAAe;AACtB,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,UAAU,QAAQ,aAAa;AACxC;AACA,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM;IAAEgB,YAAY;IAAEC,aAAa;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAC3DlB,eAAe,CAAC,CAAC;EACnB,MAAM;IAAEmB;EAAa,CAAC,GAAGlB,UAAU,CAAC,CAAC;EACrC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd8B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IACEiB,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,OAAO,IACxBA,YAAY,KAAK,KAAK,IACtBA,YAAY,KAAK,aAAa,EAC9B;MACA,MAAMc,MAAM,GAAGf,SAAS,CAACgB,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnC;MACA,IAAIjB,YAAY,KAAK,QAAQ,EAAE;QAC7BgB,GAAG,CAACE,WAAW,GAAG,OAAO;QACzBF,GAAG,CAACd,SAAS,GAAGC,WAAW;MAC7B,CAAC,MAAM;QACLa,GAAG,CAACE,WAAW,GAAGjB,aAAa;QAC/Be,GAAG,CAACd,SAAS,GAAGA,SAAS;MAC3B;MACAM,UAAU,CAACQ,GAAG,CAAC;IACjB;EACF,CAAC,EAAE,CAACf,aAAa,EAAEC,SAAS,EAAEF,YAAY,EAAEG,WAAW,CAAC,CAAC;EAEzD,MAAMgB,eAAe,GAAIC,CAAC,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACtB,YAAY,CAAC;IACzB,IAAIA,YAAY,KAAK,aAAa,EAAE;MAClC,MAAMuB,OAAO,GAAGhB,OAAO,CAACiB,YAAY,CAClC,CAAC,EACD,CAAC,EACDzB,SAAS,CAACgB,OAAO,CAACU,KAAK,EACvB1B,SAAS,CAACgB,OAAO,CAACW,MACpB,CAAC;MACD,MAAMC,SAAS,GAAG,IAAInC,SAAS,CAAC+B,OAAO,CAAC;MACxCI,SAAS,CAACC,IAAI,CAACrB,OAAO,CAACW,WAAW,EAAEE,CAAC,CAACS,OAAO,EAAET,CAAC,CAACU,OAAO,EAAE,CAAC,CAAC;MAC5DvB,OAAO,CAACwB,YAAY,CAACJ,SAAS,CAACK,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC,MAAM,IACLhC,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,OAAO,IACxBA,YAAY,KAAK,KAAK,EACtB;MACAM,UAAU,CAAC,IAAI,CAAC;MAChBC,OAAO,CAAC0B,SAAS,CAAC,CAAC;MACnB1B,OAAO,CAAC2B,MAAM,CAACd,CAAC,CAACe,WAAW,CAACC,OAAO,EAAEhB,CAAC,CAACe,WAAW,CAACE,OAAO,CAAC;IAC9D,CAAC,MAAM;MACL/B,UAAU,CAAC,IAAI,CAAC;MAChBI,SAAS,CAACU,CAAC,CAACe,WAAW,CAACC,OAAO,CAAC;MAChCxB,SAAS,CAACQ,CAAC,CAACe,WAAW,CAACE,OAAO,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,eAAe,GAAIlB,CAAC,IAAK;IAC7B,IACEpB,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,OAAO,IACxBA,YAAY,KAAK,KAAK,EACtB;MACA,IAAI,CAACK,OAAO,EAAE;MACdE,OAAO,CAACgC,MAAM,CAACnB,CAAC,CAACe,WAAW,CAACC,OAAO,EAAEhB,CAAC,CAACe,WAAW,CAACE,OAAO,CAAC;MAC5D9B,OAAO,CAACiC,MAAM,CAAC,CAAC;IAClB,CAAC,MAAM;MACL,IAAI,CAACnC,OAAO,EAAE;MACd,MAAMoC,IAAI,GAAGrB,CAAC,CAACe,WAAW,CAACC,OAAO;MAClC,MAAMM,IAAI,GAAGtB,CAAC,CAACe,WAAW,CAACE,OAAO;MAClC,MAAMZ,KAAK,GAAGgB,IAAI,GAAGhC,MAAM;MAC3B,MAAMiB,MAAM,GAAGgB,IAAI,GAAG/B,MAAM;MAC5B,MAAMG,MAAM,GAAGf,SAAS,CAACgB,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnCD,GAAG,CAAC2B,QAAQ,CAAClC,MAAM,EAAEE,MAAM,EAAEc,KAAK,EAAEC,MAAM,CAAC;IAC7C;EACF,CAAC;EAED,MAAMkB,aAAa,GAAIxB,CAAC,IAAK;IAC3B,IAAIpB,YAAY,KAAK,aAAa,EAAE;MAClCa,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM,IACLb,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,QAAQ,IACzBA,YAAY,KAAK,OAAO,IACxBA,YAAY,KAAK,KAAK,EACtB;MACAM,UAAU,CAAC,KAAK,CAAC;MACjBC,OAAO,CAACsC,SAAS,CAAC,CAAC;MACnBhC,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLP,UAAU,CAAC,KAAK,CAAC;MACjB,MAAMmC,IAAI,GAAGrB,CAAC,CAACe,WAAW,CAACC,OAAO;MAClC,MAAMM,IAAI,GAAGtB,CAAC,CAACe,WAAW,CAACE,OAAO;MAClC,MAAMZ,KAAK,GAAGgB,IAAI,GAAGhC,MAAM;MAC3B,MAAMiB,MAAM,GAAGgB,IAAI,GAAG/B,MAAM;MAC5B,MAAMG,MAAM,GAAGf,SAAS,CAACgB,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnCD,GAAG,CAAC2B,QAAQ,CAAClC,MAAM,EAAEE,MAAM,EAAEc,KAAK,EAAEC,MAAM,CAAC;MAC3Cb,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAGf,SAAS,CAACgB,OAAO;IAChC,MAAM+B,QAAQ,GAAGhC,MAAM,CAACiC,SAAS,CAAC,CAAC;IACnC1B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BlB,YAAY,CAAC0C,QAAQ,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAIhB,SAAS,IAAK;IAClC,MAAMlB,MAAM,GAAGf,SAAS,CAACgB,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMgC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGnB,SAAS;IACnBiB,GAAG,CAACG,MAAM,GAAG,MAAM;MACjBpC,GAAG,CAACqC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEvC,MAAM,CAACW,KAAK,EAAEX,MAAM,CAACY,MAAM,CAAC;MAChDV,GAAG,CAACsC,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;;EAEA5B,OAAO,CAACC,GAAG,CAAE,gBAAetB,YAAa,EAAC,CAAC;EAC3C;IAAA;IACE;IACAJ,OAAA;MAAA2D,QAAA,gBACE3D,OAAA,CAACL,GAAG;QAACiE,EAAE,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE;QAAM,CAAE;QAAAJ,QAAA,gBACvE3D,OAAA,CAACR,KAAK;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTnE,OAAA,CAACN,UAAU;UAACS,SAAS,EAAEA,SAAU;UAACc,eAAe,EAAEA;QAAgB;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtEnE,OAAA,CAACT,YAAY;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACNnE,OAAA,CAACP,QAAQ;QAAC2D,YAAY,EAAEA;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExCnE,OAAA;QACEoE,GAAG,EAAEjE,SAAU;QACfkE,WAAW,EAAE9C,eAAgB;QAC7B+C,WAAW,EAAE5B,eAAgB;QAC7B6B,SAAS,EAAEvB,aAAc;QACzBnB,KAAK,EAAE2C,MAAM,CAACC,UAAW;QACzB3C,MAAM,EAAE0C,MAAM,CAACE;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFnE,OAAA;QAAKuD,GAAG,EAAEzD,WAAY;QAAC6E,GAAG,EAAC;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;AAEV;AAACjE,EAAA,CA7JQD,aAAa;EAAA,QAGlBZ,eAAe,EACQC,UAAU;AAAA;AAAAsF,EAAA,GAJ5B3E,aAAa;AA+JtB,eAAeA,aAAa;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}