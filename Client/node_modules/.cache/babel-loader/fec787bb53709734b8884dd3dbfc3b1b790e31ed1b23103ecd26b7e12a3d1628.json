{"ast":null,"code":"var _jsxFileName = \"D:\\\\CreateFlow3\\\\Client\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\nimport { useHistory } from \"./Context/History\";\nimport \"./Cursors.css\";\nimport ColorPalette from \"./ToolBar/ColorPalette\";\nimport Tools from \"./ToolBar/Tools\";\nimport UndoRedo from \"./utils/UndoRedo\";\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\nimport { Box } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    selectedTool,\n    selectedColor,\n    lineWidth,\n    eraserWidth\n  } = useDrawingTools();\n  const {\n    addToHistory\n  } = useHistory();\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  useEffect(() => {\n    saveCanvasState();\n  }, []);\n  useEffect(() => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (selectedTool === \"Eraser\") {\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = eraserWidth;\n      } else {\n        ctx.strokeStyle = selectedColor;\n        ctx.lineWidth = lineWidth;\n      }\n      setContext(ctx);\n    }\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\n  const handleMouseDown = e => {\n    console.log(selectedTool);\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(true);\n      context.beginPath();\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    } else {\n      setDrawing(true);\n      setStartX(e.nativeEvent.offsetX);\n      setStartY(e.nativeEvent.offsetY);\n    }\n  };\n  const handleMouseMove = e => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      if (!drawing) return;\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      context.stroke();\n    } else {\n      if (!drawing) return;\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n    }\n  };\n  const handleMouseUp = e => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(false);\n      context.closePath();\n      saveCanvasState();\n    } else {\n      setDrawing(false);\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n      saveCanvasState();\n    }\n  };\n  const saveCanvasState = () => {\n    const canvas = canvasRef.current;\n    const snapShot = canvas.toDataURL();\n    console.log(\"State saved\");\n    addToHistory(snapShot);\n  };\n  const redrawCanvas = imageData => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageData;\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tools, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShapesMenu, {\n        canvasRef: canvasRef,\n        saveCanvasState: saveCanvasState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UndoRedo, {\n      redrawCanvas: redrawCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      width: 1200,\n      height: 800\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DrawingCanvas, \"E9eqV2zoN7IbR9gZvkfyUfmbh7E=\", false, function () {\n  return [useDrawingTools, useHistory];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDrawingTools","useHistory","ColorPalette","Tools","UndoRedo","ShapesMenu","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","DrawingCanvas","_s","canvasRef","selectedTool","selectedColor","lineWidth","eraserWidth","addToHistory","drawing","setDrawing","context","setContext","startX","setStartX","startY","setStartY","saveCanvasState","canvas","current","ctx","getContext","strokeStyle","handleMouseDown","e","console","log","beginPath","moveTo","nativeEvent","offsetX","offsetY","handleMouseMove","lineTo","stroke","endX","endY","width","height","fillRect","handleMouseUp","closePath","snapShot","toDataURL","redrawCanvas","imageData","img","Image","src","onload","clearRect","drawImage","children","sx","position","display","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["D:/CreateFlow3/Client/src/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\r\nimport { useHistory } from \"./Context/History\";\r\nimport \"./Cursors.css\";\r\nimport ColorPalette from \"./ToolBar/ColorPalette\";\r\nimport Tools from \"./ToolBar/Tools\";\r\nimport UndoRedo from \"./utils/UndoRedo\";\r\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction DrawingCanvas() {\r\n  const canvasRef = useRef(null);\r\n  const { selectedTool, selectedColor, lineWidth, eraserWidth } =\r\n    useDrawingTools();\r\n  const { addToHistory } = useHistory();\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [startX, setStartX] = useState(0);\r\n  const [startY, setStartY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    saveCanvasState();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      if (selectedTool === \"Eraser\") {\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.lineWidth = eraserWidth;\r\n      } else {\r\n        ctx.strokeStyle = selectedColor;\r\n        ctx.lineWidth = lineWidth;\r\n      }\r\n      setContext(ctx);\r\n    }\r\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(selectedTool);\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n    setDrawing(true);\r\n    context.beginPath();\r\n    context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    }\r\n    else{\r\n      setDrawing(true);\r\n      setStartX(e.nativeEvent.offsetX);\r\n      setStartY(e.nativeEvent.offsetY);\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n    if (!drawing) return;\r\n    context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    context.stroke();\r\n    }\r\n    else{\r\n      if(!drawing) return;\r\n      const endX = e.nativeEvent.offsetX; \r\n      const endY = e.nativeEvent.offsetY; \r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n    setDrawing(false);\r\n    context.closePath();\r\n    saveCanvasState();\r\n    }\r\n    else{\r\n      setDrawing(false);\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n      saveCanvasState();\r\n    }\r\n  };\r\n\r\n  const saveCanvasState = () => {\r\n    const canvas = canvasRef.current;\r\n    const snapShot = canvas.toDataURL();\r\n    console.log(\"State saved\");\r\n    addToHistory(snapShot);\r\n  };\r\n\r\n  const redrawCanvas = (imageData) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    img.src = imageData;\r\n    img.onload = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ position: \"absolute\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Tools />\r\n        <ShapesMenu canvasRef={canvasRef} saveCanvasState={saveCanvasState} />\r\n        <ColorPalette />\r\n      </Box>\r\n      <UndoRedo redrawCanvas={redrawCanvas} />\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        width={1200}\r\n        height={800}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}