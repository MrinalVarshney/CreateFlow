{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivansh Mishra\\\\OneDrive\\\\Desktop\\\\CreateFlow\\\\Client\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\nimport { useHistory } from \"./Context/History\";\nimport ColorPalette from \"./ToolBar/ColorPalette\";\nimport Tools from \"./ToolBar/Tools\";\nimport UndoRedo from \"./utils/UndoRedo\";\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\nimport { Box } from \"@mui/system\";\nimport FloodFill from \"q-floodfill\";\nimport { useStyles } from \"./Assets/CursorStyles\";\nimport UploadFiles from \"./utils/UploadFiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    selectedTool,\n    selectedColor,\n    lineWidth,\n    eraserWidth\n  } = useDrawingTools();\n  const {\n    addToHistory\n  } = useHistory();\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  useEffect(() => {\n    saveCanvasState();\n  }, []);\n  useEffect(() => {\n    if (selectedTool === \"UploadFiles\") {\n      // const canvas = canvasRef.current;\n      // const ctx = canvas.getContext(\"2d\");\n      console.log(\"hello\");\n      /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setFile(e.target.files[0]);\n        },\n        placeholder: \"Upload an file\",\n        style: {\n          backgroundColor: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this);\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\" || selectedTool === \"PaintBucket\") {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (selectedTool === \"Eraser\") {\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = eraserWidth;\n      } else {\n        ctx.strokeStyle = selectedColor;\n        ctx.lineWidth = lineWidth;\n      }\n      setContext(ctx);\n    }\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\n  const handleMouseDown = e => {\n    console.log(selectedTool);\n    if (selectedTool === \"PaintBucket\") {\n      const imgData = context.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const floodFill = new FloodFill(imgData);\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\n      context.putImageData(floodFill.imageData, 0, 0);\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(true);\n      context.beginPath();\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    } else {\n      setDrawing(true);\n      setStartX(e.nativeEvent.offsetX);\n      setStartY(e.nativeEvent.offsetY);\n    }\n  };\n  const handleMouseMove = e => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      if (!drawing) return;\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      context.stroke();\n    } else {\n      if (!drawing) return;\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n    }\n  };\n  const handleMouseUp = e => {\n    if (selectedTool === \"PaintBucket\") {\n      saveCanvasState();\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(false);\n      context.closePath();\n      saveCanvasState();\n    } else {\n      setDrawing(false);\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n      saveCanvasState();\n    }\n  };\n  const saveCanvasState = () => {\n    const canvas = canvasRef.current;\n    const snapShot = canvas.toDataURL();\n    console.log(\"State saved\");\n    addToHistory(snapShot);\n  };\n  const redrawCanvas = imageData => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageData;\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tools, {\n        setIsOpen: setIsOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShapesMenu, {\n        canvasRef: canvasRef,\n        saveCanvasState: saveCanvasState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UndoRedo, {\n      isOpen: isOpen,\n      redrawCanvas: redrawCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: classes[selectedTool],\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"XdkamwM6zumCRpYx64ChAM7WP7w=\", false, function () {\n  return [useDrawingTools, useHistory, useStyles];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDrawingTools","useHistory","ColorPalette","Tools","UndoRedo","ShapesMenu","Box","FloodFill","useStyles","UploadFiles","jsxDEV","_jsxDEV","DrawingCanvas","_s","canvasRef","selectedTool","selectedColor","lineWidth","eraserWidth","addToHistory","drawing","setDrawing","context","setContext","startX","setStartX","startY","setStartY","saveCanvasState","console","log","type","onChange","e","setFile","target","files","placeholder","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","canvas","current","ctx","getContext","strokeStyle","handleMouseDown","imgData","getImageData","width","height","floodFill","fill","clientX","clientY","putImageData","imageData","beginPath","moveTo","nativeEvent","offsetX","offsetY","handleMouseMove","lineTo","stroke","endX","endY","fillRect","handleMouseUp","closePath","snapShot","toDataURL","redrawCanvas","img","Image","src","onload","clearRect","drawImage","isOpen","setIsOpen","classes","children","sx","position","display","flexDirection","className","ref","onMouseDown","onMouseMove","onMouseUp","window","innerWidth","innerHeight","_c","$RefreshReg$"],"sources":["C:/Users/Shivansh Mishra/OneDrive/Desktop/CreateFlow/Client/src/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\r\nimport { useHistory } from \"./Context/History\";\r\nimport ColorPalette from \"./ToolBar/ColorPalette\";\r\nimport Tools from \"./ToolBar/Tools\";\r\nimport UndoRedo from \"./utils/UndoRedo\";\r\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\r\nimport { Box } from \"@mui/system\";\r\nimport FloodFill from \"q-floodfill\";\r\nimport { useStyles } from \"./Assets/CursorStyles\";\r\nimport UploadFiles from \"./utils/UploadFiles\";\r\n\r\nfunction DrawingCanvas() {\r\n  const canvasRef = useRef(null);\r\n  const { selectedTool, selectedColor, lineWidth, eraserWidth } =\r\n    useDrawingTools();\r\n  const { addToHistory } = useHistory();\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [startX, setStartX] = useState(0);\r\n  const [startY, setStartY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    saveCanvasState();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTool === \"UploadFiles\") {\r\n      // const canvas = canvasRef.current;\r\n      // const ctx = canvas.getContext(\"2d\");\r\n      console.log(\"hello\");\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          setFile(e.target.files[0]);\r\n        }}\r\n        placeholder=\"Upload an file\"\r\n        style={{ backgroundColor: \"red\" }}\r\n      />;\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\" ||\r\n      selectedTool === \"PaintBucket\"\r\n    ) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      if (selectedTool === \"Eraser\") {\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.lineWidth = eraserWidth;\r\n      } else {\r\n        ctx.strokeStyle = selectedColor;\r\n        ctx.lineWidth = lineWidth;\r\n      }\r\n      setContext(ctx);\r\n    }\r\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(selectedTool);\r\n    if (selectedTool === \"PaintBucket\") {\r\n      const imgData = context.getImageData(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n      const floodFill = new FloodFill(imgData);\r\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\r\n      context.putImageData(floodFill.imageData, 0, 0);\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(true);\r\n      context.beginPath();\r\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    } else {\r\n      setDrawing(true);\r\n      setStartX(e.nativeEvent.offsetX);\r\n      setStartY(e.nativeEvent.offsetY);\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      if (!drawing) return;\r\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n      context.stroke();\r\n    } else {\r\n      if (!drawing) return;\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    if (selectedTool === \"PaintBucket\") {\r\n      saveCanvasState();\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(false);\r\n      context.closePath();\r\n      saveCanvasState();\r\n    } else {\r\n      setDrawing(false);\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n      saveCanvasState();\r\n    }\r\n  };\r\n\r\n  const saveCanvasState = () => {\r\n    const canvas = canvasRef.current;\r\n    const snapShot = canvas.toDataURL();\r\n    console.log(\"State saved\");\r\n    addToHistory(snapShot);\r\n  };\r\n\r\n  const redrawCanvas = (imageData) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    img.src = imageData;\r\n    img.onload = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n  };\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box sx={{ position: \"absolute\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Tools setIsOpen={setIsOpen} />\r\n        <ShapesMenu canvasRef={canvasRef} saveCanvasState={saveCanvasState} />\r\n        <ColorPalette />\r\n      </Box>\r\n      <UndoRedo isOpen={isOpen} redrawCanvas={redrawCanvas} />\r\n\r\n      <canvas\r\n        className={classes[selectedTool]}\r\n        ref={canvasRef}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}