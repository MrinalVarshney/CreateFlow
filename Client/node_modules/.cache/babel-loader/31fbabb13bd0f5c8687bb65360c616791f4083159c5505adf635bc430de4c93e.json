{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivansh Mishra\\\\OneDrive\\\\Desktop\\\\CreateFlow\\\\Client\\\\src\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\nimport { useHistory } from \"./Context/History\";\nimport ColorPalette from \"./ToolBar/ColorPalette\";\nimport Tools from \"./ToolBar/Tools\";\nimport UndoRedo from \"./utils/UndoRedo\";\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\nimport { Box } from \"@mui/system\";\nimport FloodFill from \"q-floodfill\";\nimport { useStyles } from \"./Assets/CursorStyles\";\nimport UploadFiles from \"./utils/UploadFiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    selectedTool,\n    selectedColor,\n    lineWidth,\n    eraserWidth\n  } = useDrawingTools();\n  const {\n    addToHistory\n  } = useHistory();\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  useEffect(() => {\n    saveCanvasState();\n  }, []);\n  useEffect(() => {\n    if (selectedTool === \"UploadFiles\") {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      /*#__PURE__*/_jsxDEV(UploadFiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this);\n      const img = new Image();\n      img.src = selectedTool;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0);\n      };\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\" || selectedTool === \"PaintBucket\") {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (selectedTool === \"Eraser\") {\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = eraserWidth;\n      } else {\n        ctx.strokeStyle = selectedColor;\n        ctx.lineWidth = lineWidth;\n      }\n      setContext(ctx);\n    }\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\n  const handleMouseDown = e => {\n    console.log(selectedTool);\n    if (selectedTool === \"PaintBucket\") {\n      const imgData = context.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const floodFill = new FloodFill(imgData);\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\n      context.putImageData(floodFill.imageData, 0, 0);\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(true);\n      context.beginPath();\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    } else {\n      setDrawing(true);\n      setStartX(e.nativeEvent.offsetX);\n      setStartY(e.nativeEvent.offsetY);\n    }\n  };\n  const handleMouseMove = e => {\n    if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      if (!drawing) return;\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      context.stroke();\n    } else {\n      if (!drawing) return;\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n    }\n  };\n  const handleMouseUp = e => {\n    if (selectedTool === \"PaintBucket\") {\n      saveCanvasState();\n    } else if (selectedTool === \"Pencil\" || selectedTool === \"Eraser\" || selectedTool === \"Brush\" || selectedTool === \"Pen\") {\n      setDrawing(false);\n      context.closePath();\n      saveCanvasState();\n    } else {\n      setDrawing(false);\n      const endX = e.nativeEvent.offsetX;\n      const endY = e.nativeEvent.offsetY;\n      const width = endX - startX;\n      const height = endY - startY;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillRect(startX, startY, width, height);\n      saveCanvasState();\n    }\n  };\n  const saveCanvasState = () => {\n    const canvas = canvasRef.current;\n    const snapShot = canvas.toDataURL();\n    console.log(\"State saved\");\n    addToHistory(snapShot);\n  };\n  const redrawCanvas = imageData => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageData;\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tools, {\n        setIsOpen: setIsOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShapesMenu, {\n        canvasRef: canvasRef,\n        saveCanvasState: saveCanvasState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorPalette, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UndoRedo, {\n      isOpen: isOpen,\n      redrawCanvas: redrawCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: classes[selectedTool],\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"XdkamwM6zumCRpYx64ChAM7WP7w=\", false, function () {\n  return [useDrawingTools, useHistory, useStyles];\n});\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDrawingTools","useHistory","ColorPalette","Tools","UndoRedo","ShapesMenu","Box","FloodFill","useStyles","UploadFiles","jsxDEV","_jsxDEV","DrawingCanvas","_s","canvasRef","selectedTool","selectedColor","lineWidth","eraserWidth","addToHistory","drawing","setDrawing","context","setContext","startX","setStartX","startY","setStartY","saveCanvasState","canvas","current","ctx","getContext","fileName","_jsxFileName","lineNumber","columnNumber","img","Image","src","onload","drawImage","strokeStyle","handleMouseDown","e","console","log","imgData","getImageData","width","height","floodFill","fill","clientX","clientY","putImageData","imageData","beginPath","moveTo","nativeEvent","offsetX","offsetY","handleMouseMove","lineTo","stroke","endX","endY","fillRect","handleMouseUp","closePath","snapShot","toDataURL","redrawCanvas","clearRect","isOpen","setIsOpen","classes","children","sx","position","display","flexDirection","className","ref","onMouseDown","onMouseMove","onMouseUp","window","innerWidth","innerHeight","_c","$RefreshReg$"],"sources":["C:/Users/Shivansh Mishra/OneDrive/Desktop/CreateFlow/Client/src/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDrawingTools } from \"./Context/DrawingToolsContext\";\r\nimport { useHistory } from \"./Context/History\";\r\nimport ColorPalette from \"./ToolBar/ColorPalette\";\r\nimport Tools from \"./ToolBar/Tools\";\r\nimport UndoRedo from \"./utils/UndoRedo\";\r\nimport ShapesMenu from \"./ToolBar/ShapesMenu\";\r\nimport { Box } from \"@mui/system\";\r\nimport FloodFill from \"q-floodfill\";\r\nimport { useStyles } from \"./Assets/CursorStyles\";\r\nimport UploadFiles from \"./utils/UploadFiles\";\r\n\r\nfunction DrawingCanvas() {\r\n  const canvasRef = useRef(null);\r\n  const { selectedTool, selectedColor, lineWidth, eraserWidth } =\r\n    useDrawingTools();\r\n  const { addToHistory } = useHistory();\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [startX, setStartX] = useState(0);\r\n  const [startY, setStartY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    saveCanvasState();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTool === \"UploadFiles\") {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      <UploadFiles />;\r\n      const img = new Image();\r\n      img.src = selectedTool;\r\n      img.onload = () => {\r\n        ctx.drawImage(img, 0, 0);\r\n      };\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\" ||\r\n      selectedTool === \"PaintBucket\"\r\n    ) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      if (selectedTool === \"Eraser\") {\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.lineWidth = eraserWidth;\r\n      } else {\r\n        ctx.strokeStyle = selectedColor;\r\n        ctx.lineWidth = lineWidth;\r\n      }\r\n      setContext(ctx);\r\n    }\r\n  }, [selectedColor, lineWidth, selectedTool, eraserWidth]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(selectedTool);\r\n    if (selectedTool === \"PaintBucket\") {\r\n      const imgData = context.getImageData(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n      const floodFill = new FloodFill(imgData);\r\n      floodFill.fill(context.strokeStyle, e.clientX, e.clientY, 0);\r\n      context.putImageData(floodFill.imageData, 0, 0);\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(true);\r\n      context.beginPath();\r\n      context.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n    } else {\r\n      setDrawing(true);\r\n      setStartX(e.nativeEvent.offsetX);\r\n      setStartY(e.nativeEvent.offsetY);\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      if (!drawing) return;\r\n      context.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n      context.stroke();\r\n    } else {\r\n      if (!drawing) return;\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    if (selectedTool === \"PaintBucket\") {\r\n      saveCanvasState();\r\n    } else if (\r\n      selectedTool === \"Pencil\" ||\r\n      selectedTool === \"Eraser\" ||\r\n      selectedTool === \"Brush\" ||\r\n      selectedTool === \"Pen\"\r\n    ) {\r\n      setDrawing(false);\r\n      context.closePath();\r\n      saveCanvasState();\r\n    } else {\r\n      setDrawing(false);\r\n      const endX = e.nativeEvent.offsetX;\r\n      const endY = e.nativeEvent.offsetY;\r\n      const width = endX - startX;\r\n      const height = endY - startY;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.fillRect(startX, startY, width, height);\r\n      saveCanvasState();\r\n    }\r\n  };\r\n\r\n  const saveCanvasState = () => {\r\n    const canvas = canvasRef.current;\r\n    const snapShot = canvas.toDataURL();\r\n    console.log(\"State saved\");\r\n    addToHistory(snapShot);\r\n  };\r\n\r\n  const redrawCanvas = (imageData) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    img.src = imageData;\r\n    img.onload = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n  };\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box sx={{ position: \"absolute\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Tools setIsOpen={setIsOpen} />\r\n        <ShapesMenu canvasRef={canvasRef} saveCanvasState={saveCanvasState} />\r\n        <ColorPalette />\r\n      </Box>\r\n      <UndoRedo isOpen={isOpen} redrawCanvas={redrawCanvas} />\r\n\r\n      <canvas\r\n        className={classes[selectedTool]}\r\n        ref={canvasRef}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}