{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivansh Mishra\\\\OneDrive\\\\Desktop\\\\CreateFlow\\\\Client\\\\src\\\\ToolBar\\\\Tools.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\nimport GestureIcon from \"@mui/icons-material/Gesture\";\nimport { Popover, Slider, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDrawingTools } from \"../Context/DrawingToolsContext\";\nimport toolsList from \"../Assets/ToolsItemList\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tools({\n  isOpen,\n  setIsOpen\n}) {\n  _s();\n  const {\n    lineWidth,\n    setLineWidth,\n    selectedTool,\n    setSelectedTool\n  } = useDrawingTools();\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(10);\n  useEffect(() => {\n    setIsOpen(open);\n    console.log(isOpen);\n  }, [open]);\n  const handleOpen = event => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n  const handleSelection = useCallback((e, tool) => {\n    e.preventDefault();\n    if (tool === \"Pen\" || tool === \"Brush\") {\n      setMin(5);\n      if (selectedTool !== tool) setLineWidth(5);\n      setMax(20);\n    } else {\n      setMin(1);\n      if (selectedTool !== tool) setLineWidth(1);\n      setMax(10);\n    }\n    setSelectedTool(tool);\n  }, [setLineWidth, selectedTool, setSelectedTool]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeedDial, {\n      ariaLabel: \"SpeedDial basic example\",\n      sx: {\n        position: \"absolute\",\n        paddingTop: 0.5,\n        paddingLeft: 0.5,\n        display: \"inline-block\"\n      },\n      icon: /*#__PURE__*/_jsxDEV(GestureIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this),\n      direction: \"down\",\n      children: toolsList.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n        icon: action.icon,\n        tooltipTitle: action.name,\n        onClick: action.name === \"Thickness\" ? handleOpen : e => handleSelection(e, action.name),\n        sx: {\n          backgroundColor: selectedTool === action.name ? \"gray\" : \"transparent\"\n        }\n      }, action.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        value: lineWidth,\n        onChange: (e, newValue) => setLineWidth(newValue),\n        min: min,\n        max: max\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          textAlign: \"center\",\n          padding: 2\n        },\n        children: [\"Thickness: \", lineWidth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Tools, \"QXzHz3+3+4Gupju+mCjTYob6vh0=\", false, function () {\n  return [useDrawingTools];\n});\n_c = Tools;\nvar _c;\n$RefreshReg$(_c, \"Tools\");","map":{"version":3,"names":["React","SpeedDial","SpeedDialAction","GestureIcon","Popover","Slider","Typography","useState","useDrawingTools","toolsList","useCallback","useEffect","jsxDEV","_jsxDEV","Tools","isOpen","setIsOpen","_s","lineWidth","setLineWidth","selectedTool","setSelectedTool","open","setOpen","anchorEl","setAnchorEl","min","setMin","max","setMax","console","log","handleOpen","event","stopPropagation","currentTarget","handleClose","handleSelection","e","tool","preventDefault","children","ariaLabel","sx","position","paddingTop","paddingLeft","display","icon","fileName","_jsxFileName","lineNumber","columnNumber","direction","map","action","tooltipTitle","name","onClick","backgroundColor","onClose","anchorOrigin","vertical","horizontal","transformOrigin","p","value","onChange","newValue","variant","textAlign","padding","_c","$RefreshReg$"],"sources":["C:/Users/Shivansh Mishra/OneDrive/Desktop/CreateFlow/Client/src/ToolBar/Tools.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport SpeedDial from \"@mui/material/SpeedDial\";\r\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\r\nimport GestureIcon from \"@mui/icons-material/Gesture\";\r\nimport { Popover, Slider, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useDrawingTools } from \"../Context/DrawingToolsContext\";\r\nimport toolsList from \"../Assets/ToolsItemList\";\r\nimport { useCallback } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Tools({ isOpen, setIsOpen }) {\r\n  const { lineWidth, setLineWidth, selectedTool, setSelectedTool } =\r\n    useDrawingTools();\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [min, setMin] = useState(1);\r\n  const [max, setMax] = useState(10);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n    console.log(isOpen);\r\n  }, [open]);\r\n  const handleOpen = (event) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSelection = useCallback(\r\n    (e, tool) => {\r\n      e.preventDefault();\r\n      if (tool === \"Pen\" || tool === \"Brush\") {\r\n        setMin(5);\r\n        if (selectedTool !== tool) setLineWidth(5);\r\n        setMax(20);\r\n      } else {\r\n        setMin(1);\r\n        if (selectedTool !== tool) setLineWidth(1);\r\n        setMax(10);\r\n      }\r\n      setSelectedTool(tool);\r\n    },\r\n    [setLineWidth, selectedTool, setSelectedTool]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial basic example\"\r\n        sx={{\r\n          position: \"absolute\",\r\n          paddingTop: 0.5,\r\n          paddingLeft: 0.5,\r\n          display: \"inline-block\",\r\n        }}\r\n        icon={<GestureIcon />}\r\n        direction=\"down\"\r\n      >\r\n        {toolsList.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={\r\n              action.name === \"Thickness\"\r\n                ? handleOpen\r\n                : (e) => handleSelection(e, action.name)\r\n            }\r\n            sx={{\r\n              backgroundColor:\r\n                selectedTool === action.name ? \"gray\" : \"transparent\",\r\n            }}\r\n          ></SpeedDialAction>\r\n        ))}\r\n      </SpeedDial>\r\n      <Popover\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        p={2}\r\n      >\r\n        <Slider\r\n          value={lineWidth}\r\n          onChange={(e, newValue) => setLineWidth(newValue)}\r\n          min={min}\r\n          max={max}\r\n        />\r\n        <Typography variant=\"body2\" sx={{ textAlign: \"center\", padding: 2 }}>\r\n          Thickness: {lineWidth}\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}