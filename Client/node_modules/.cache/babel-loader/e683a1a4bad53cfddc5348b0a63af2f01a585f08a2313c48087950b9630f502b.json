{"ast":null,"code":"var qFloodFill = function (e) {\n  var t = {};\n  function o(i) {\n    if (t[i]) {\n      return t[i].exports;\n    }\n    var r = t[i] = {\n      i: i,\n      l: false,\n      exports: {}\n    };\n    e[i].call(r.exports, r, r.exports, o);\n    r.l = true;\n    return r.exports;\n  }\n  o.m = e;\n  o.c = t;\n  o.d = function (e, t, i) {\n    if (!o.o(e, t)) {\n      Object.defineProperty(e, t, {\n        enumerable: true,\n        get: i\n      });\n    }\n  };\n  o.r = function (e) {\n    if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n      Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      });\n    }\n    Object.defineProperty(e, \"__esModule\", {\n      value: true\n    });\n  };\n  o.t = function (e, t) {\n    if (t & 1) e = o(e);\n    if (t & 8) return e;\n    if (t & 4 && typeof e === \"object\" && e && e.__esModule) return e;\n    var i = Object.create(null);\n    o.r(i);\n    Object.defineProperty(i, \"default\", {\n      enumerable: true,\n      value: e\n    });\n    if (t & 2 && typeof e != \"string\") for (var r in e) o.d(i, r, function (t) {\n      return e[t];\n    }.bind(null, r));\n    return i;\n  };\n  o.n = function (e) {\n    var t = e && e.__esModule ? function t() {\n      return e[\"default\"];\n    } : function t() {\n      return e;\n    };\n    o.d(t, \"a\", t);\n    return t;\n  };\n  o.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  };\n  o.p = \"\";\n  return o(o.s = 0);\n}([function (e, t, o) {\n  \"use strict\";\n\n  o.r(t);\n  o.d(t, \"isSameColor\", function () {\n    return l;\n  });\n  o.d(t, \"setColorAtPixel\", function () {\n    return r;\n  });\n  o.d(t, \"getColorAtPixel\", function () {\n    return i;\n  });\n  o.d(t, \"colorToRGBA\", function () {\n    return a;\n  });\n  o.d(t, \"hex2RGBA\", function () {\n    return n;\n  });\n  function i(e, t, o) {\n    var i = e.width,\n      r = e.data;\n    var l = 4 * (o * i + t);\n    if (r[l + 3] === undefined) {\n      throw new Error(\"Invalid pixel coordinates: x=\" + t + \"; y=\" + o);\n    }\n    return {\n      r: r[l],\n      g: r[l + 1],\n      b: r[l + 2],\n      a: r[l + 3]\n    };\n  }\n  function r(e, t, o, i) {\n    var r = e.width,\n      l = e.data;\n    var n = 4 * (i * r + o);\n    if (l[n + 3] === undefined) {\n      throw new Error(\"Invalid pixel coordinates. Cannot set color at: x=\" + o + \"; y=\" + i);\n    }\n    l[n + 0] = t.r & 255;\n    l[n + 1] = t.g & 255;\n    l[n + 2] = t.b & 255;\n    l[n + 3] = t.a & 255;\n  }\n  function l(e, t, o) {\n    if (o === void 0) {\n      o = 0;\n    }\n    return !(Math.abs(e.r - t.r) > o || Math.abs(e.g - t.g) > o || Math.abs(e.b - t.b) > o || Math.abs(e.a - t.a) > o);\n  }\n  function n(e, t) {\n    if (t === void 0) {\n      t = 255;\n    }\n    var o = e;\n    if (e.indexOf(\"#\") === 0) {\n      o = e.slice(1);\n    }\n    if (o.length === 3) {\n      o = o[0] + o[0] + o[1] + o[1] + o[2] + o[2];\n    }\n    if (o.length !== 6) {\n      throw new Error(\"Invalid HEX color \" + o + \".\");\n    }\n    var i = parseInt(o.slice(0, 2), 16);\n    var r = parseInt(o.slice(2, 4), 16);\n    var l = parseInt(o.slice(4, 6), 16);\n    return {\n      r: i,\n      g: r,\n      b: l,\n      a: t\n    };\n  }\n  function a(e) {\n    if (e.indexOf(\"rgba\") !== -1) {\n      var t = /rgba\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9\\.]{1,})/g.exec(e),\n        o = t[0],\n        i = t[1],\n        r = t[2],\n        l = t[3],\n        a = t[4];\n      return {\n        r: parseInt(i),\n        g: parseInt(r),\n        b: parseInt(l),\n        a: Math.ceil(parseFloat(a) * 255)\n      };\n    } else if (e.indexOf(\"rgb\") !== -1) {\n      var s = /rgb\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3})/g.exec(e),\n        o = s[0],\n        i = s[1],\n        r = s[2],\n        l = s[3];\n      return {\n        r: parseInt(i),\n        g: parseInt(r),\n        b: parseInt(l),\n        a: 255\n      };\n    } else if (e.indexOf(\"#\") !== -1) {\n      return n(e);\n    } else {\n      throw new Error(\"Unsupported color format. Please use CSS rgba, rgb, or HEX!\");\n    }\n  }\n  var s = function () {\n    function e(e) {\n      this.collectModifiedPixels = false;\n      this.modifiedPixelsCount = 0;\n      this.modifiedPixels = new Set();\n      this._tolerance = 0;\n      this._queue = [];\n      this.imageData = e;\n      this.isSameColor = l;\n      this.setColorAtPixel = r;\n      this.getColorAtPixel = i;\n      this.colorToRGBA = a;\n    }\n    e.prototype.fill = function (e, t, o, i) {\n      this._newColor = this.colorToRGBA(e);\n      this._replacedColor = this.getColorAtPixel(this.imageData, t, o);\n      this._tolerance = i;\n      if (this.isSameColor(this._replacedColor, this._newColor, this._tolerance)) {\n        return;\n      }\n      this.addToQueue([t, t, o, -1]);\n      this.fillQueue();\n    };\n    e.prototype.addToQueue = function (e) {\n      this._queue.push(e);\n    };\n    e.prototype.popFromQueue = function () {\n      if (!this._queue.length) {\n        return null;\n      }\n      return this._queue.pop();\n    };\n    e.prototype.isValidTarget = function (e) {\n      if (e === null) {\n        return;\n      }\n      var t = this.getColorAtPixel(this.imageData, e.x, e.y);\n      return this.isSameColor(this._replacedColor, t, this._tolerance);\n    };\n    e.prototype.fillLineAt = function (e, t) {\n      if (!this.isValidTarget({\n        x: e,\n        y: t\n      })) {\n        return [-1, -1];\n      }\n      this.setPixelColor(this._newColor, {\n        x: e,\n        y: t\n      });\n      var o = e;\n      var i = e;\n      var r = this.getPixelNeighbour(\"left\", o, t);\n      while (r && this.isValidTarget(r)) {\n        this.setPixelColor(this._newColor, r);\n        o = r.x;\n        r = this.getPixelNeighbour(\"left\", o, t);\n      }\n      r = this.getPixelNeighbour(\"right\", i, t);\n      while (r && this.isValidTarget(r)) {\n        this.setPixelColor(this._newColor, r);\n        i = r.x;\n        r = this.getPixelNeighbour(\"right\", i, t);\n      }\n      return [o, i];\n    };\n    e.prototype.fillQueue = function () {\n      var e = this.popFromQueue();\n      while (e) {\n        var t = e[0],\n          o = e[1],\n          i = e[2],\n          r = e[3];\n        var l = t;\n        while (l !== -1 && l <= o) {\n          var n = this.fillLineAt(l, i),\n            a = n[0],\n            s = n[1];\n          if (a !== -1) {\n            if (a >= t && s <= o && r !== -1) {\n              if (r < i && i + 1 < this.imageData.height) {\n                this.addToQueue([a, s, i + 1, i]);\n              }\n              if (r > i && i > 0) {\n                this.addToQueue([a, s, i - 1, i]);\n              }\n            } else {\n              if (i > 0) {\n                this.addToQueue([a, s, i - 1, i]);\n              }\n              if (i + 1 < this.imageData.height) {\n                this.addToQueue([a, s, i + 1, i]);\n              }\n            }\n          }\n          if (s === -1 && l <= o) {\n            l += 1;\n          } else {\n            l = s + 1;\n          }\n        }\n        e = this.popFromQueue();\n      }\n    };\n    e.prototype.setPixelColor = function (e, t) {\n      this.setColorAtPixel(this.imageData, e, t.x, t.y);\n      this.modifiedPixelsCount++;\n      this.collectModifiedPixels && this.modifiedPixels.add(t.x + \"|\" + t.y);\n    };\n    e.prototype.getPixelNeighbour = function (e, t, o) {\n      t = t | 0;\n      o = o | 0;\n      var i;\n      switch (e) {\n        case \"right\":\n          i = {\n            x: t + 1 | 0,\n            y: o\n          };\n          break;\n        case \"left\":\n          i = {\n            x: t - 1 | 0,\n            y: o\n          };\n          break;\n      }\n      if (i.x >= 0 && i.x < this.imageData.width) {\n        return i;\n      }\n      return null;\n    };\n    return e;\n  }();\n  var u = s;\n  var d = t[\"default\"] = u;\n}]);\nqFloodFill === undefined && console.error(\"esm-webpack-plugin: nothing exported!\");\nexport default qFloodFill[\"default\"];\nconst _qFloodFill$isSameColor = qFloodFill[\"isSameColor\"];\nconst _qFloodFill$setColorAtPixel = qFloodFill[\"setColorAtPixel\"];\nconst _qFloodFill$getColorAtPixel = qFloodFill[\"getColorAtPixel\"];\nconst _qFloodFill$colorToRGBA = qFloodFill[\"colorToRGBA\"];\nconst _qFloodFill$hex2RGBA = qFloodFill[\"hex2RGBA\"];\nexport { _qFloodFill$isSameColor as isSameColor, _qFloodFill$setColorAtPixel as setColorAtPixel, _qFloodFill$getColorAtPixel as getColorAtPixel, _qFloodFill$colorToRGBA as colorToRGBA, _qFloodFill$hex2RGBA as hex2RGBA };","map":{"version":3,"names":["t","o","i","exports","r","l","e","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","n","prototype","hasOwnProperty","p","s","width","data","undefined","Error","g","b","a","Math","abs","indexOf","slice","length","parseInt","exec","ceil","parseFloat","collectModifiedPixels","modifiedPixelsCount","modifiedPixels","Set","_tolerance","_queue","imageData","isSameColor","setColorAtPixel","getColorAtPixel","colorToRGBA","fill","_newColor","_replacedColor","addToQueue","fillQueue","push","popFromQueue","pop","isValidTarget","x","y","fillLineAt","setPixelColor","getPixelNeighbour","height","add","u"],"sources":["webpack://qFloodFill/webpack/bootstrap","webpack://qFloodFill/src/util/colorUtils.ts","webpack://qFloodFill/src/FloodFill.ts","webpack://qFloodFill/src/index.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export type ColorRGBA = {\n    r: number\n    g: number\n    b: number\n    a: number\n}\n\nexport function getColorAtPixel(\n    imageData: ImageData,\n    x: number,\n    y: number,\n): ColorRGBA {\n    const { width, data } = imageData\n    const startPos = 4 * (y * width + x)\n    if (data[startPos + 3] === undefined) {\n        throw new Error('Invalid pixel coordinates: x=' + x + '; y=' + y)\n    }\n    return {\n        r: data[startPos],\n        g: data[startPos + 1],\n        b: data[startPos + 2],\n        a: data[startPos + 3],\n    }\n}\n\nexport function setColorAtPixel(\n    imageData: ImageData,\n    color: ColorRGBA,\n    x: number,\n    y: number,\n): void {\n    const { width, data } = imageData\n    const startPos = 4 * (y * width + x)\n    if (data[startPos + 3] === undefined) {\n        throw new Error(\n            'Invalid pixel coordinates. Cannot set color at: x=' +\n                x +\n                '; y=' +\n                y,\n        )\n    }\n    data[startPos + 0] = color.r & 0xff\n    data[startPos + 1] = color.g & 0xff\n    data[startPos + 2] = color.b & 0xff\n    data[startPos + 3] = color.a & 0xff\n}\n\nexport function isSameColor(\n    a: ColorRGBA,\n    b: ColorRGBA,\n    tolerance = 0,\n): boolean {\n    return !(\n        Math.abs(a.r - b.r) > tolerance ||\n        Math.abs(a.g - b.g) > tolerance ||\n        Math.abs(a.b - b.b) > tolerance ||\n        Math.abs(a.a - b.a) > tolerance\n    )\n}\n\nexport function hex2RGBA(hex: string, alpha = 255): ColorRGBA {\n    let parsedHex = hex\n    if (hex.indexOf('#') === 0) {\n        parsedHex = hex.slice(1)\n    }\n    // convert 3-digit hex to 6-digits.\n    if (parsedHex.length === 3) {\n        parsedHex =\n            parsedHex[0] +\n            parsedHex[0] +\n            parsedHex[1] +\n            parsedHex[1] +\n            parsedHex[2] +\n            parsedHex[2]\n    }\n    if (parsedHex.length !== 6) {\n        throw new Error(`Invalid HEX color ${parsedHex}.`)\n    }\n    const r = parseInt(parsedHex.slice(0, 2), 16)\n    const g = parseInt(parsedHex.slice(2, 4), 16)\n    const b = parseInt(parsedHex.slice(4, 6), 16)\n    return {\n        r,\n        g,\n        b,\n        a: alpha,\n    }\n}\n\nexport function colorToRGBA(color: string): ColorRGBA {\n    if (color.indexOf('rgba') !== -1) {\n        const [\n            _,\n            r,\n            g,\n            b,\n            a,\n        ] = /rgba\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9\\.]{1,})/g.exec(\n            color,\n        )\n        return {\n            r: parseInt(r),\n            g: parseInt(g),\n            b: parseInt(b),\n            a: Math.ceil(parseFloat(a) * 255),\n        }\n    } else if (color.indexOf('rgb') !== -1) {\n        const [\n            _,\n            r,\n            g,\n            b,\n        ] = /rgb\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3})/g.exec(color)\n        return {\n            r: parseInt(r),\n            g: parseInt(g),\n            b: parseInt(b),\n            a: 255,\n        }\n    } else if (color.indexOf('#') !== -1) {\n        return hex2RGBA(color)\n    } else {\n        throw new Error(\n            'Unsupported color format. Please use CSS rgba, rgb, or HEX!',\n        )\n    }\n}\n","import {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    ColorRGBA,\n} from './util/colorUtils'\n\ntype PixelCoords = {\n    x: number\n    y: number\n}\n\n/**\n * [startX, endX, y, parentY]\n */\ntype LineQueued = [number, number, number, number]\n\nexport default class FloodFill {\n    public imageData: ImageData\n    public isSameColor: typeof isSameColor\n    public setColorAtPixel: typeof setColorAtPixel\n    public getColorAtPixel: typeof getColorAtPixel\n    public colorToRGBA: typeof colorToRGBA\n    public collectModifiedPixels = false\n    public modifiedPixelsCount = 0\n    public modifiedPixels: Set<string> = new Set()\n\n    private _tolerance = 0\n    private _queue: Array<LineQueued> = []\n    private _replacedColor: ColorRGBA\n    private _newColor: ColorRGBA\n\n    constructor(imageData: ImageData) {\n        this.imageData = imageData\n        // Allow for custom implementations of the following methods\n        this.isSameColor = isSameColor\n        this.setColorAtPixel = setColorAtPixel\n        this.getColorAtPixel = getColorAtPixel\n        this.colorToRGBA = colorToRGBA\n    }\n    /**\n     * color should be in CSS format - rgba, rgb, or HEX\n     */\n    public fill(color: string, x: number, y: number, tolerance: number): void {\n        this._newColor = this.colorToRGBA(color)\n        this._replacedColor = this.getColorAtPixel(this.imageData, x, y)\n        this._tolerance = tolerance\n        if (\n            this.isSameColor(\n                this._replacedColor,\n                this._newColor,\n                this._tolerance,\n            )\n        ) {\n            return\n        }\n\n        this.addToQueue([x, x, y, -1])\n        this.fillQueue()\n    }\n\n    private addToQueue(line: LineQueued): void {\n        this._queue.push(line)\n    }\n\n    private popFromQueue(): LineQueued | null {\n        if (!this._queue.length) {\n            return null\n        }\n        return this._queue.pop()\n    }\n\n    private isValidTarget(pixel: PixelCoords | null): boolean {\n        if (pixel === null) {\n            return\n        }\n        const pixelColor = this.getColorAtPixel(\n            this.imageData,\n            pixel.x,\n            pixel.y,\n        )\n        return this.isSameColor(\n            this._replacedColor,\n            pixelColor,\n            this._tolerance,\n        )\n    }\n\n    private fillLineAt(x: number, y: number): [number, number] {\n        if (!this.isValidTarget({ x, y })) {\n            return [-1, -1]\n        }\n        this.setPixelColor(this._newColor, { x, y })\n        let minX = x\n        let maxX = x\n        let px = this.getPixelNeighbour('left', minX, y)\n        while (px && this.isValidTarget(px)) {\n            this.setPixelColor(this._newColor, px)\n            minX = px.x\n            px = this.getPixelNeighbour('left', minX, y)\n        }\n        px = this.getPixelNeighbour('right', maxX, y)\n        while (px && this.isValidTarget(px)) {\n            this.setPixelColor(this._newColor, px)\n            maxX = px.x\n            px = this.getPixelNeighbour('right', maxX, y)\n        }\n        return [minX, maxX]\n    }\n\n    private fillQueue(): void {\n        let line = this.popFromQueue()\n        while (line) {\n            const [start, end, y, parentY] = line\n            let currX = start\n            while (currX !== -1 && currX <= end) {\n                const [lineStart, lineEnd] = this.fillLineAt(currX, y)\n                if (lineStart !== -1) {\n                    if (\n                        lineStart >= start &&\n                        lineEnd <= end &&\n                        parentY !== -1\n                    ) {\n                        if (parentY < y && y + 1 < this.imageData.height) {\n                            this.addToQueue([lineStart, lineEnd, y + 1, y])\n                        }\n                        if (parentY > y && y > 0) {\n                            this.addToQueue([lineStart, lineEnd, y - 1, y])\n                        }\n                    } else {\n                        if (y > 0) {\n                            this.addToQueue([lineStart, lineEnd, y - 1, y])\n                        }\n                        if (y + 1 < this.imageData.height) {\n                            this.addToQueue([lineStart, lineEnd, y + 1, y])\n                        }\n                    }\n                }\n                if (lineEnd === -1 && currX <= end) {\n                    currX += 1\n                } else {\n                    currX = lineEnd + 1\n                }\n            }\n            line = this.popFromQueue()\n        }\n    }\n\n    private setPixelColor(color: ColorRGBA, pixel: PixelCoords): void {\n        this.setColorAtPixel(this.imageData, color, pixel.x, pixel.y)\n        this.modifiedPixelsCount++\n        this.collectModifiedPixels &&\n            this.modifiedPixels.add(`${pixel.x}|${pixel.y}`)\n    }\n\n    private getPixelNeighbour(\n        direction: 'left' | 'right',\n        x: number,\n        y: number,\n    ): PixelCoords | null {\n        x = x | 0\n        y = y | 0\n        let coords: PixelCoords\n        switch (direction) {\n            case 'right':\n                coords = { x: (x + 1) | 0, y }\n                break\n            case 'left':\n                coords = { x: (x - 1) | 0, y }\n                break\n        }\n        if (coords.x >= 0 && coords.x < this.imageData.width) {\n            return coords\n        }\n        return null\n    }\n}\n","import FloodFill from './FloodFill'\nimport {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    hex2RGBA,\n    ColorRGBA,\n} from './util/colorUtils'\n\nexport default FloodFill\nexport {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    hex2RGBA,\n    ColorRGBA,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}