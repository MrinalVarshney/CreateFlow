{"version":3,"sources":["webpack://q-floodfill/webpack/universalModuleDefinition","webpack://q-floodfill/webpack/bootstrap","webpack://q-floodfill/./src/util/colorUtils.ts","webpack://q-floodfill/./src/FloodFill.ts","webpack://q-floodfill/./src/index.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","getColorAtPixel","imageData","x","y","width","data","startPos","undefined","Error","g","b","a","setColorAtPixel","color","isSameColor","tolerance","Math","abs","hex2RGBA","hex","alpha","parsedHex","indexOf","slice","length","parseInt","colorToRGBA","_","ceil","parseFloat","collectModifiedPixels","modifiedPixelsCount","modifiedPixels","Set","_tolerance","_queue","this","fill","_newColor","_replacedColor","addToQueue","fillQueue","line","push","popFromQueue","pop","isValidTarget","pixel","pixelColor","fillLineAt","setPixelColor","minX","maxX","px","getPixelNeighbour","start","end","parentY","currX","lineStart","lineEnd","height","add","direction","coords"],"mappings":"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","file":"index.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"q-floodfill\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"q-floodfill\"] = factory();\n\telse\n\t\troot[\"q-floodfill\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export type ColorRGBA = {\n    r: number\n    g: number\n    b: number\n    a: number\n}\n\nexport function getColorAtPixel(\n    imageData: ImageData,\n    x: number,\n    y: number,\n): ColorRGBA {\n    const { width, data } = imageData\n    const startPos = 4 * (y * width + x)\n    if (data[startPos + 3] === undefined) {\n        throw new Error('Invalid pixel coordinates: x=' + x + '; y=' + y)\n    }\n    return {\n        r: data[startPos],\n        g: data[startPos + 1],\n        b: data[startPos + 2],\n        a: data[startPos + 3],\n    }\n}\n\nexport function setColorAtPixel(\n    imageData: ImageData,\n    color: ColorRGBA,\n    x: number,\n    y: number,\n): void {\n    const { width, data } = imageData\n    const startPos = 4 * (y * width + x)\n    if (data[startPos + 3] === undefined) {\n        throw new Error(\n            'Invalid pixel coordinates. Cannot set color at: x=' +\n                x +\n                '; y=' +\n                y,\n        )\n    }\n    data[startPos + 0] = color.r & 0xff\n    data[startPos + 1] = color.g & 0xff\n    data[startPos + 2] = color.b & 0xff\n    data[startPos + 3] = color.a & 0xff\n}\n\nexport function isSameColor(\n    a: ColorRGBA,\n    b: ColorRGBA,\n    tolerance = 0,\n): boolean {\n    return !(\n        Math.abs(a.r - b.r) > tolerance ||\n        Math.abs(a.g - b.g) > tolerance ||\n        Math.abs(a.b - b.b) > tolerance ||\n        Math.abs(a.a - b.a) > tolerance\n    )\n}\n\nexport function hex2RGBA(hex: string, alpha = 255): ColorRGBA {\n    let parsedHex = hex\n    if (hex.indexOf('#') === 0) {\n        parsedHex = hex.slice(1)\n    }\n    // convert 3-digit hex to 6-digits.\n    if (parsedHex.length === 3) {\n        parsedHex =\n            parsedHex[0] +\n            parsedHex[0] +\n            parsedHex[1] +\n            parsedHex[1] +\n            parsedHex[2] +\n            parsedHex[2]\n    }\n    if (parsedHex.length !== 6) {\n        throw new Error(`Invalid HEX color ${parsedHex}.`)\n    }\n    const r = parseInt(parsedHex.slice(0, 2), 16)\n    const g = parseInt(parsedHex.slice(2, 4), 16)\n    const b = parseInt(parsedHex.slice(4, 6), 16)\n    return {\n        r,\n        g,\n        b,\n        a: alpha,\n    }\n}\n\nexport function colorToRGBA(color: string): ColorRGBA {\n    if (color.indexOf('rgba') !== -1) {\n        const [\n            _,\n            r,\n            g,\n            b,\n            a,\n        ] = /rgba\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9\\.]{1,})/g.exec(\n            color,\n        )\n        return {\n            r: parseInt(r),\n            g: parseInt(g),\n            b: parseInt(b),\n            a: Math.ceil(parseFloat(a) * 255),\n        }\n    } else if (color.indexOf('rgb') !== -1) {\n        const [\n            _,\n            r,\n            g,\n            b,\n        ] = /rgb\\(.*?([0-9]{1,3}).*?([0-9]{1,3}).*?([0-9]{1,3})/g.exec(color)\n        return {\n            r: parseInt(r),\n            g: parseInt(g),\n            b: parseInt(b),\n            a: 255,\n        }\n    } else if (color.indexOf('#') !== -1) {\n        return hex2RGBA(color)\n    } else {\n        throw new Error(\n            'Unsupported color format. Please use CSS rgba, rgb, or HEX!',\n        )\n    }\n}\n","import {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    ColorRGBA,\n} from './util/colorUtils'\n\ntype PixelCoords = {\n    x: number\n    y: number\n}\n\n/**\n * [startX, endX, y, parentY]\n */\ntype LineQueued = [number, number, number, number]\n\nexport default class FloodFill {\n    public imageData: ImageData\n    public isSameColor: typeof isSameColor\n    public setColorAtPixel: typeof setColorAtPixel\n    public getColorAtPixel: typeof getColorAtPixel\n    public colorToRGBA: typeof colorToRGBA\n    public collectModifiedPixels = false\n    public modifiedPixelsCount = 0\n    public modifiedPixels: Set<string> = new Set()\n\n    private _tolerance = 0\n    private _queue: Array<LineQueued> = []\n    private _replacedColor: ColorRGBA\n    private _newColor: ColorRGBA\n\n    constructor(imageData: ImageData) {\n        this.imageData = imageData\n        // Allow for custom implementations of the following methods\n        this.isSameColor = isSameColor\n        this.setColorAtPixel = setColorAtPixel\n        this.getColorAtPixel = getColorAtPixel\n        this.colorToRGBA = colorToRGBA\n    }\n    /**\n     * color should be in CSS format - rgba, rgb, or HEX\n     */\n    public fill(color: string, x: number, y: number, tolerance: number): void {\n        this._newColor = this.colorToRGBA(color)\n        this._replacedColor = this.getColorAtPixel(this.imageData, x, y)\n        this._tolerance = tolerance\n        if (\n            this.isSameColor(\n                this._replacedColor,\n                this._newColor,\n                this._tolerance,\n            )\n        ) {\n            return\n        }\n\n        this.addToQueue([x, x, y, -1])\n        this.fillQueue()\n    }\n\n    private addToQueue(line: LineQueued): void {\n        this._queue.push(line)\n    }\n\n    private popFromQueue(): LineQueued | null {\n        if (!this._queue.length) {\n            return null\n        }\n        return this._queue.pop()\n    }\n\n    private isValidTarget(pixel: PixelCoords | null): boolean {\n        if (pixel === null) {\n            return\n        }\n        const pixelColor = this.getColorAtPixel(\n            this.imageData,\n            pixel.x,\n            pixel.y,\n        )\n        return this.isSameColor(\n            this._replacedColor,\n            pixelColor,\n            this._tolerance,\n        )\n    }\n\n    private fillLineAt(x: number, y: number): [number, number] {\n        if (!this.isValidTarget({ x, y })) {\n            return [-1, -1]\n        }\n        this.setPixelColor(this._newColor, { x, y })\n        let minX = x\n        let maxX = x\n        let px = this.getPixelNeighbour('left', minX, y)\n        while (px && this.isValidTarget(px)) {\n            this.setPixelColor(this._newColor, px)\n            minX = px.x\n            px = this.getPixelNeighbour('left', minX, y)\n        }\n        px = this.getPixelNeighbour('right', maxX, y)\n        while (px && this.isValidTarget(px)) {\n            this.setPixelColor(this._newColor, px)\n            maxX = px.x\n            px = this.getPixelNeighbour('right', maxX, y)\n        }\n        return [minX, maxX]\n    }\n\n    private fillQueue(): void {\n        let line = this.popFromQueue()\n        while (line) {\n            const [start, end, y, parentY] = line\n            let currX = start\n            while (currX !== -1 && currX <= end) {\n                const [lineStart, lineEnd] = this.fillLineAt(currX, y)\n                if (lineStart !== -1) {\n                    if (\n                        lineStart >= start &&\n                        lineEnd <= end &&\n                        parentY !== -1\n                    ) {\n                        if (parentY < y && y + 1 < this.imageData.height) {\n                            this.addToQueue([lineStart, lineEnd, y + 1, y])\n                        }\n                        if (parentY > y && y > 0) {\n                            this.addToQueue([lineStart, lineEnd, y - 1, y])\n                        }\n                    } else {\n                        if (y > 0) {\n                            this.addToQueue([lineStart, lineEnd, y - 1, y])\n                        }\n                        if (y + 1 < this.imageData.height) {\n                            this.addToQueue([lineStart, lineEnd, y + 1, y])\n                        }\n                    }\n                }\n                if (lineEnd === -1 && currX <= end) {\n                    currX += 1\n                } else {\n                    currX = lineEnd + 1\n                }\n            }\n            line = this.popFromQueue()\n        }\n    }\n\n    private setPixelColor(color: ColorRGBA, pixel: PixelCoords): void {\n        this.setColorAtPixel(this.imageData, color, pixel.x, pixel.y)\n        this.modifiedPixelsCount++\n        this.collectModifiedPixels &&\n            this.modifiedPixels.add(`${pixel.x}|${pixel.y}`)\n    }\n\n    private getPixelNeighbour(\n        direction: 'left' | 'right',\n        x: number,\n        y: number,\n    ): PixelCoords | null {\n        x = x | 0\n        y = y | 0\n        let coords: PixelCoords\n        switch (direction) {\n            case 'right':\n                coords = { x: (x + 1) | 0, y }\n                break\n            case 'left':\n                coords = { x: (x - 1) | 0, y }\n                break\n        }\n        if (coords.x >= 0 && coords.x < this.imageData.width) {\n            return coords\n        }\n        return null\n    }\n}\n","import FloodFill from './FloodFill'\nimport {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    hex2RGBA,\n    ColorRGBA,\n} from './util/colorUtils'\n\nexport default FloodFill\nexport {\n    isSameColor,\n    setColorAtPixel,\n    getColorAtPixel,\n    colorToRGBA,\n    hex2RGBA,\n    ColorRGBA,\n}\n"],"sourceRoot":""}